{"version":3,"file":"service.js","sourceRoot":"","sources":["service.ts"],"names":[],"mappings":";AACA,kBAAkB;;;AAElB,qCAAiC;AACjC,iDAA8C;AAGjC,QAAA,YAAY,GAAG,IAAA,gBAAM,GAAE,CAAC;AAErC,MAAM,GAAG,GAAG,IAAI,iBAAO,EAAE,CAAC;AAE1B,gBAAgB;AAChB,oBAAY,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE;IACpC,GAAG,CAAC,WAAW,CAAC,CAAC,MAAU,EAAE,EAAE;QAC3B,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;YACnB,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;SACpB;aACI;YACD,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAC,OAAO,EAAE,iBAAiB,EAAC,CAAC,CAAA;SACrD;IAEL,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC;AAEH,wBAAwB;AACxB,oBAAY,CAAC,GAAG,CAAC,gBAAgB,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE;IAC5C,GAAG,CAAC,OAAO,CAAC,CAAC,MAAW,EAAE,EAAE;QACxB,IAAI,MAAM,IAAI,SAAS,EAAE;YACrB,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;SACpB;aACI;YACD,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAC,OAAO,EAAE,gBAAgB,EAAC,CAAC,CAAA;SACpD;IAEL,CAAC,EAAE,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;AAClC,CAAC,CAAC,CAAC;AAEH,2BAA2B;AAC3B,oBAAY,CAAC,GAAG,CAAC,gBAAgB,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE;IAC5C,GAAG,CAAC,UAAU,CAAC,CAAC,MAAa,EAAE,EAAE;QAC7B,IAAI,MAAM,GAAG,CAAC,EAAE;YACZ,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAC,SAAS,EAAE,MAAM,CAAC,QAAQ,EAAE,GAAG,uBAAuB,EAAC,CAAC,CAAC;SAClF;aACI;YACD,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAC,OAAO,EAAE,sBAAsB,EAAC,CAAC,CAAC;SAC3D;IACL,CAAC,EAAE,GAAG,CAAC,IAAI,EAAE,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;AAC5C,CAAC,CAAC,CAAC;AAEH,uBAAuB;AACvB,oBAAY,CAAC,MAAM,CAAC,gBAAgB,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE;IAC/C,GAAG,CAAC,UAAU,CAAC,CAAC,MAAa,EAAE,EAAE;QAC7B,IAAI,MAAM,GAAG,CAAC,EAAE;YACZ,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAC,SAAS,EAAE,MAAM,CAAC,QAAQ,EAAE,GAAG,sBAAsB,EAAC,CAAC,CAAC;SACjF;aACI;YACD,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAC,OAAO,EAAE,sBAAsB,EAAC,CAAC,CAAC;SAC3D;IACL,CAAC,EAAE,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;AAClC,CAAC,CAAC,CAAC;AAEH,cAAc;AACd,oBAAY,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE;IACrC,GAAG,CAAC,UAAU,CAAC,CAAC,MAAa,EAAE,EAAE;QAC7B,IAAI,MAAM,GAAG,CAAC,EAAE;YACZ,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAC,SAAS,EAAE,GAAG,CAAC,IAAI,CAAC,KAAK,GAAG,cAAc,EAAC,CAAC,CAAC;SACtE;aACI;YACD,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAC,OAAO,EAAE,sBAAsB,EAAC,CAAC,CAAC;SAC3D;IACL,CAAC,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AACjB,CAAC,CAAC,CAAC","sourcesContent":["\r\n// service.ts file\r\n\r\nimport { Router } from 'express';\r\nimport { GameDAO } from '../database/GameDAO';\r\nimport { Game } from '../models/Game';\r\n\r\nexport const ServiceRoute = Router();\r\n\r\nconst dao = new GameDAO();\r\n\r\n// GET all games\r\nServiceRoute.get('/games', (req, res) => {\r\n    dao.getAllGames((result:any) => {\r\n        if (result.length > 0) {\r\n            res.send(result);\r\n        }\r\n        else {\r\n            res.status(204).send({\"ERROR\": \"No games found!\"})\r\n        }\r\n        \r\n    });\r\n});\r\n\r\n// GET single game by ID\r\nServiceRoute.get('/games/:gameID', (req, res) => {\r\n    dao.getGame((result:Game) => {\r\n        if (result != undefined) {\r\n            res.send(result);\r\n        }\r\n        else {\r\n            res.status(204).send({\"ERROR\": \"No game found!\"})\r\n        }\r\n        \r\n    }, Number(req.params.gameID));\r\n});\r\n\r\n// PUT update a single game\r\nServiceRoute.put('/games/:gameID', (req, res) => {\r\n    dao.updateGame((result:number) => {\r\n        if (result > 0) {\r\n            res.status(201).send({\"Result:\": result.toString() + \" row(s) were affected\"});\r\n        }\r\n        else {\r\n            res.status(500).send({\"ERROR\": \"Nothing got updated!\"});\r\n        }\r\n    }, req.body, Number(req.params.gameID));\r\n});\r\n\r\n// DELETE a single game\r\nServiceRoute.delete('/games/:gameID', (req, res) => {\r\n    dao.deleteGame((result:number) => {\r\n        if (result > 0) {\r\n            res.status(202).send({\"Result:\": result.toString() + \" row(s) were deleted\"});\r\n        }\r\n        else {\r\n            res.status(500).send({\"ERROR\": \"Nothing got deleted!\"});\r\n        }\r\n    }, Number(req.params.gameID));\r\n});\r\n\r\n// POST a game\r\nServiceRoute.post('/games', (req, res) => {\r\n    dao.createGame((result:number) => {\r\n        if (result > 0) {\r\n            res.status(201).send({\"Result:\": req.body.title + \" was created\"});\r\n        }\r\n        else {\r\n            res.status(500).send({\"ERROR\": \"Nothing got created!\"});\r\n        }\r\n    }, req.body);\r\n});"]}